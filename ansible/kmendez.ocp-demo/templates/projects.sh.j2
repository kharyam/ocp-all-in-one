#!/bin/bash

set -e

cd ~{{ openshift_user }}

# Import latest EAP images
oc import-image jboss-eap64-openshift -n openshift --all --from=registry.access.redhat.com/jboss-eap-6/eap64-openshift --confirm {{ openshift_creds }} || true
oc import-image jboss-eap70-openshift -n openshift --all --from=registry.access.redhat.com/jboss-eap-7/eap70-openshift --confirm {{ openshift_creds }} || true

# Import older image for demo purposes
oc import-image openshift/jboss-eap70-openshift:1.3 --from=registry.access.redhat.com/jboss-eap-7/eap70-openshift:1.3 --confirm -n openshift {{ openshift_creds }} || true

# Create projects if they don't exist
########
# TODO 
#######
Delete and recreate entire pqc-dev project to avoid hanging binary builds

oc new-project pqc-support --display-name "PQC Support Infrastructure"  {{ openshift_creds }} || true
oc new-project pqc-dev --display-name "PQC Development Project" {{ openshift_creds }} || true
oc new-project pqc-test --display-name "PQC Test Project" {{ openshift_creds }} || true
oc new-project pqc-prod --display-name "PQC Production Project" {{ openshift_creds }} || true

# Wait for registry to start
while ! oc get pods -n default  {{ openshift_creds }} | grep docker-registry | grep Running 
do
sleep 1
done

# Reset the jenkins pvc
if oc get pvc -n pqc-support {{ openshift_creds }} | grep jenkins
then
JENKINS_PV=$(oc get pvc -n pqc-support {{ openshift_creds }} | grep jenkins | awk '{print $3}')
JENKINS_PV_DIR=/home/openshift/pvs/${JENKINS_PV}
sudo chmod 777 ${JENKINS_PV_DIR}/jobs/Personal\ Qualification\ Calculator/nextBuildNumber || true
echo 1 > ${JENKINS_PV_DIR}/jobs/Personal\ Qualification\ Calculator/nextBuildNumber || true
sudo rm -fr ${JENKINS_PV_DIR}/jobs/Personal\ Qualification\ Calculator/builds/* || true
else
echo "Jenkins PVC does not exist yet"
fi

# Create the PQC Support Project
oc delete all --all -n pqc-support {{ openshift_creds }} || true
oc delete template pqc-support -n pqc-support {{ openshift_creds }} || true
oc create -f pqc_templates/pqc_support_template.yml -n pqc-support {{ openshift_creds }} || true
oc new-app --template=pqc-support -n pqc-support {{ openshift_creds }} || true
oc start-build --from-file=./sonarqube/Dockerfile bc/sonarqube-custom --follow --wait --namespace=pqc-support {{ openshift_creds }}
oc expose svc/gogs --port=3000 -n pqc-support {{ openshift_creds }}
oc expose svc/nexus -n pqc-support {{ openshift_creds }}
oc expose svc/sonarqube-custom -n pqc-support {{ openshift_creds }}

oc create -f ocp-jenkins/is.yml -n pqc-support {{ openshift_creds }} || true
oc create -f ocp-jenkins/bc.yml -n pqc-support {{ openshift_creds }} || true
oc start-build custom-jenkins-build --follow --wait {{ openshift_creds }} -n pqc-support
oc new-app custom-jenkins -n pqc-support {{ openshift_creds }} 
oc expose svc/custom-jenkins --port=8080 -n pqc-support {{ openshift_creds }} 
oc set env dc/custom-jenkins -n pqc-support {{ openshift_creds }} JAVA_OPTS=-Dhudson.model.DirectoryBrowserSupport.CSP=\"\" JAVA_GC_OPTS=-XX:MaxMetaspaceSize=256m
oc set probe dc/custom-jenkins --readiness --failure-threshold=3 --initial-delay-seconds=3  --period-seconds=5 --timeout-seconds=10 {{ openshift_creds }} -n pqc-support --get-url=http://:8080/
oc adm policy add-role-to-user edit -z default -n pqc-support {{ openshift_creds }}

# Create the PQC Development Project
oc delete all --all -n pqc-dev {{ openshift_creds }} || true
oc delete template pqc-dev -n pqc-dev {{ openshift_creds }} || true
oc create -f pqc_templates/pqc_dev_template.yml -n pqc-dev {{ openshift_creds }}
oc new-app --template=pqc-dev -n pqc-dev {{ openshift_creds }} || true
oc delete route pqc-dev {{ openshift_creds }} -n pqc-dev || true
oc expose svc/pqc-dev {{ openshift_creds }} -n pqc-dev

# Create the PQC Test Project
oc delete all --all -n pqc-test {{ openshift_creds }} || true
oc delete template pqc-test -n pqc-test {{ openshift_creds }} || true
oc create -f pqc_templates/pqc_test_template.yml -n pqc-test {{ openshift_creds }}
oc new-app --template=pqc-test -n pqc-test {{ openshift_creds }} || true
oc delete route pqc-test {{ openshift_creds }} -n pqc-test || true
oc expose svc/pqc-test {{ openshift_creds }} -n pqc-test


# Create the PQC Production Project
oc delete all --all -n pqc-prod {{ openshift_creds }} || true
oc delete template pqc-prod -n pqc-prod {{ openshift_creds }} || true
oc create -f pqc_templates/pqc_prod_template.yml -n pqc-prod {{ openshift_creds }}
oc new-app --template=pqc-prod -n pqc-prod {{ openshift_creds }} || true
oc delete route pqc-prod {{ openshift_creds }} -n pqc-prod || true
oc expose svc/pqc-prod {{ openshift_creds }} -n pqc-prod

printf "\nWaiting for jenkins pod to start"
while ! oc get pods -n pqc-support {{ openshift_creds }} | grep custom-jenkins | grep -v build | grep -v deploy | grep "1/1" 
do
printf "\n."
sleep 2
done
printf "started\n"

# Update jenkins plugins
JENKINS_POD=$(oc get pods -n pqc-support {{ openshift_creds }} | grep custom-jenkins | grep -v build | grep -v deploy | awk '{print $1}')
echo oc exec ${JENKINS_POD} {{ openshift_creds }} -n pqc-support /var/lib/jenkins/update.sh
oc exec ${JENKINS_POD} {{ openshift_creds }} -n pqc-support /var/lib/jenkins/update.sh

