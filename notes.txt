#######################
## OCP Install Notes ##
#######################

vi /usr/share/ansible/openshift-ansible/roles/openshift_health_checker/openshift_checks/disk_availability.py
Update the disk check if the VM has less than 40GB storage:
#            'masters': 40 * 10**9,
            'masters': 30 * 10**9,


######################
## Post OCP Install ##
######################

oc env rc/hawkular-cassandra-1 MAX_HEAP_SIZE=512M -n openshift-infra
oc env rc/hawkular-cassandra-1 NEW_HEAP_SIZE=100M -n openshift-infra
oc set resources rc/hawkular-metrics --requests=cpu=500m,memory=256Mi --limits=cpu=2000m,memory=1536Mi -n openshift-infra
oc adm policy add-scc-to-user anyuid -z default -n pqc-support

# Scale down then up cassandra and hawkular metrics pods
oc scale rc/hawkular-cassandra-1 --replicas=0
oc scale rc/hawkular-metrics --replicas=0
oc scale rc/hawkular-cassandra-1 --replicas=1
oc scale rc/hawkular-metrics --replicas=1

# create a pvc called registry-pvc from the UI (default project)

oc volume deploymentconfigs/docker-registry --add --name=registry-storage -t pvc --claim-name=registry-pvc --overwrite

oc import-image openshift/jboss-eap70-openshift:1.3 --from=registry.access.redhat.com/jboss-eap-7/eap70-openshift:1.3 --confirm -n openshift
oc import-image jboss-eap70-openshift -n openshift --all --confirm

# Mount a PVC for metrics:
oc volume rc/hawkular-cassandra-1 --overwrite --mount-path=/cassandra_data --type=persistentVolumeClaim --add --claim-size=10Gi --name=cassandra-data -n openshift-infra
# Scale cassandra down then up

docker pull registry.access.redhat.com/jboss-eap-7/eap70-openshift:1.3
oc tag registry.access.redhat.com/jboss-eap-7/eap70-openshift:1.3 openshift/eap70-openshift:1.3

# Install logging
oc project logging
ansible-playbook -i hosts /usr/share/ansible/openshift-ansible/playbooks/byo/openshift-cluster/openshift-logging.yml 

#Persistent storage for logging:
oc volume deploymentconfigs/logging-es-data-master-osurnn1m --add --name=elasticsearch-storage -t pvc --claim-name=logging-es-1 --overwrite

############################
## Create Jenkins Account ##
############################
oc create sa jenkins -n pqc-support
oc policy add-role-to-user edit system:serviceaccount:pqc-support:jenkins -n pqc-support
oc policy add-role-to-user edit system:serviceaccount:pqc-support:jenkins -n pqc-support
oc policy add-role-to-user edit system:serviceaccount:pqc-support:jenkins -n pqc-support

################
## Demo Reset ##
################

# Run projects.sh


##########
## Misc ##
##########

# repo Config
rm -fr .git
git init
git add Jenkinsfile.external README.md deployments/ openshift/ pom.xml src/
git config user.name "Joe Developer"
git config user.email "jdeveloper@nowhere.com"
git commit -am "Initial commit"
git remote add gogs "http://gogs-pqc-support.apps.192.168.124.215.nip.io/developer/person-qualification-calculator.git"
git push gogs master

============

# Couldn't log onto redhat repo
docker login registry.connect.redhat.com
docker pull registry.connect.redhat.com/sonatype/nexus-repository-manager


oadm ca create-server-cert \
    --signer-cert=/etc/origin/master/ca.crt \
    --signer-key=/etc/origin/master/ca.key \
    --signer-serial=/etc/origin/master/ca.serial.txt \
    --hostnames='docker-registry.apps.192.168.124.215.nip.io,docker-registry.default.svc.cluster.local,172.30.157.37' \
    --cert=/etc/secrets/registry.crt \
    --key=/etc/secrets/registry.key

=================
#free up cache
sudo su -
free && sync && echo 3 > /proc/sys/vm/drop_caches && free

export PROJECT=pqc-support
oc delete all --selector="build=jenkins-custom" -n ${PROJECT}
oc delete all --selector="app=jenkins-custom" -n ${PROJECT}
oc delete sa jenkins -n ${PROJECT}

oc new-build --binary --name=jenkins-custom --image-stream=openshift/jenkins:2 --to=jenkins-custom:latest -n ${PROJECT}
oc start-build --from-dir=jenkins-ocp bc/jenkins-custom --follow --wait -n ${PROJECT}
oc new-app jenkins-custom -n ${PROJECT} -e OPENSHIFT_ENABLE_OAUTH=false -e KUBERNETES_MASTER=https://kubernetes.default:443 -e KUBERNETES_TRUST_CERTIFICATES=true -e JNLP_SERVICE_NAME=jenkins-jnlp
oc policy add-role-to-user edit system:serviceaccount:pqc-support:default -n ${PROJECT}
oc expose svc/jenkins-custom -n ${PROJECT}
oc expose service jenkins-custom -n ${PROJECT} --port=50000 --name=jenkins-jnlp
oc policy add-role-to-user edit system:serviceaccount:jenkins:default -n ${PROJECT}


## SCAP ##
sudo yum install -y atomic openscap openscap-utils openscap-scanner scap-security-guide

# Jenkins
sudo yum install -y dejavu-sans-fonts fontconfig dejavu-sans-fonts java-1.8.0-openjdk-devel
# Update iptables to open 8080
